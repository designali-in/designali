{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport { visit } from \"unist-util-visit\";\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\n\nconst computedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\n  },\n  slugAsParams: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n  },\n  readingTime: {\n    type: \"number\",\n    resolve: (doc) => {\n      const content = String(doc.body.raw);\n      const wordsPerMinute = 200;\n      const numberOfWords = content.split(/\\s/g).length;\n      const minutes = numberOfWords / wordsPerMinute;\n      return Math.ceil(minutes);\n    },\n  },\n};\n\nconst GalleryPost = defineDocumentType(() => ({\n  name: \"GalleryPost\",\n  filePathPattern: \"gallery/**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the blog post\",\n      required: true,\n    },\n    date: {\n      type: \"string\",\n      description: \"The date of the assetst\",\n      required: true,\n    },\n    modifiedTime: {\n      type: \"string\",\n      description: \"The modified time of the assets\",\n      required: true,\n    },\n    download: {\n      type: \"string\",\n      description: \"The summary of the assets\",\n      required: true,\n    },\n    dimention: {\n      type: \"string\",\n      description: \"The summary of the assets\",\n      required: true,\n    },\n    size: {\n      type: \"string\",\n      description: \"The summary of the assets\",\n      required: true,\n    },\n    summary: {\n      type: \"string\",\n      description: \"The summary of the assets\",\n      required: true,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\n    },\n  },\n}));\n\nconst BlogPost = defineDocumentType(() => ({\n  name: \"BlogPost\",\n  filePathPattern: \"blog/**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the blog post\",\n      required: true,\n    },\n    date: {\n      type: \"string\",\n      description: \"The date of the blog post\",\n      required: true,\n    },\n    modifiedTime: {\n      type: \"string\",\n      description: \"The modified time of the blog post\",\n      required: true,\n    },\n    summary: {\n      type: \"string\",\n      description: \"The summary of the blog post\",\n      required: true,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\n    },\n  },\n}));\n\nexport const Doc = defineDocumentType(() => ({\n  name: \"Doc\",\n  filePathPattern: `docs/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n    },\n    published: {\n      type: \"boolean\",\n      default: true,\n    },\n  },\n  computedFields,\n}));\n\nexport const Guide = defineDocumentType(() => ({\n  name: \"Guide\",\n  filePathPattern: `guides/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n    },\n    date: {\n      type: \"date\",\n      required: true,\n    },\n    published: {\n      type: \"boolean\",\n      default: true,\n    },\n    featured: {\n      type: \"boolean\",\n      default: false,\n    },\n  },\n  computedFields,\n}));\n\nexport const Page = defineDocumentType(() => ({\n  name: \"Page\",\n  filePathPattern: `pages/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n    },\n  },\n  computedFields,\n}));\n\nexport default makeSource({\n  contentDirPath: \"./src/content\",\n  documentTypes: [Page, Doc, Guide, BlogPost, GalleryPost],\n  mdx: {\n    // remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      () => (tree) => {\n        visit(tree, (node) => {});\n      },\n      [\n        // @ts-ignore\n        rehypePrettyCode,\n        {\n          theme: { dark: \"one-dark-pro\", light: \"github-light\" },\n\n          /**\n           * @param {{ children: string | any[]; }} node\n           */\n          onVisitLine(node) {\n            if (node.children.length === 0) {\n              node.children = [{ type: \"text\", value: \" \" }];\n            }\n          },\n          /**\n           * @param {{ properties: { className: string[]; }; }} node\n           */\n          onVisitHighlightedLine(node) {\n            node.properties.className.push(\"line--highlighted\");\n          },\n          /**\n           * @param {{ properties: { className: string[]; }; }} node\n           */\n          onVisitHighlightedWord(node) {\n            node.properties.className = [\"word--highlighted\"];\n          },\n        },\n      ],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"subheading-anchor\"],\n            ariaLabel: \"Link to section\",\n          },\n        },\n      ],\n    ],\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
