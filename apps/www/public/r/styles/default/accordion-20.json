{
  "name": "accordion-20",
  "type": "registry:example",
  "files": [
    {
      "path": "example/components/accordions/accordion-20.tsx",
      "content": "import { DIcon, DIcons } from \"dicons\";\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\n\nconst items = [\n  {\n    id: \"1\",\n    title: \"What makes Designali unique?\",\n    icon: DIcons.Command,\n    collapsibles: [\n      {\n        title: \"How does it perform?\",\n        content:\n          \"Every component is fine-tuned for speed, ensuring minimal bundle size and optimal efficiency.\",\n        icon: DIcons.Gauge,\n      },\n      {\n        title: \"Is the documentation extensive?\",\n        content:\n          \"Absolutely! Our documentation is detailed, with live examples and best practices for every component.\",\n        icon: DIcons.CircleDashed,\n      },\n    ],\n  },\n  {\n    id: \"2\",\n    title: \"Can I customize the components?\",\n    icon: DIcons.Eclipse,\n    collapsibles: [\n      {\n        title: \"Is custom theming supported?\",\n        content:\n          \"Yes! Our theming system is fully flexible, allowing easy customization of both light and dark modes.\",\n        icon: DIcons.Gauge,\n      },\n      {\n        title: \"How well does it work with Tailwind?\",\n        content:\n          \"We offer seamless integration with Tailwind CSS, including custom utility classes for enhanced styling.\",\n        icon: DIcons.CircleDashed,\n      },\n    ],\n  },\n  {\n    id: \"3\",\n    title: \"Is Designali optimized for performance?\",\n    icon: DIcons.PlugZap,\n    collapsibles: [\n      {\n        title: \"Whatâ€™s the impact on bundle size?\",\n        content:\n          \"Our components are tree-shakeable, ensuring they add minimal overhead to your application.\",\n        open: true,\n        icon: DIcons.Gauge,\n      },\n      {\n        title: \"Does it support code splitting?\",\n        content:\n          \"Yes, automatic code splitting is built-in for improved loading times and efficiency.\",\n        icon: DIcons.CircleDashed,\n      },\n    ],\n  },\n  {\n    id: \"4\",\n    title: \"How accessible are the components?\",\n    icon: DIcons.AtSign,\n    collapsibles: [\n      {\n        title: \"Which screen readers are supported?\",\n        content:\n          \"We rigorously test with NVDA, VoiceOver, and JAWS to ensure full accessibility compliance.\",\n        icon: DIcons.Gauge,\n      },\n      {\n        title: \"Does it support keyboard navigation?\",\n        content:\n          \"Yes! Our components follow WAI-ARIA best practices for smooth and intuitive keyboard navigation.\",\n        icon: DIcons.CircleDashed,\n      },\n    ],\n  },\n];\n\nexport default function AccordionDemo() {\n  return (\n    <div className=\"w-full space-y-4\">\n      <h2 className=\"text-xl font-bold\">Multi-level Icon</h2>\n      <Accordion\n        type=\"single\"\n        collapsible\n        className=\"w-full border-none\"\n        defaultValue=\"3\"\n      >\n        {items.map((item) => (\n          <AccordionItem value={item.id} key={item.id}>\n            <AccordionTrigger className=\"justify-start gap-3 text-[15px] leading-6 hover:no-underline [&>svg]:-order-1\">\n              <span className=\"flex items-center gap-3\">\n                <item.icon\n                  strokeWidth={1}\n                  className=\"h-5 w-5 shrink-0 opacity-60\"\n                  aria-hidden=\"true\"\n                />\n                <span>{item.title}</span>\n              </span>\n            </AccordionTrigger>\n            <AccordionContent className=\"p-0\">\n              {item.collapsibles.map((collapsible, index) => (\n                <CollapsibleDemo\n                  key={index}\n                  title={collapsible.title}\n                  content={collapsible.content}\n                  open={collapsible.open}\n                  icon={collapsible.icon}\n                />\n              ))}\n            </AccordionContent>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </div>\n  );\n}\n\nfunction CollapsibleDemo({\n  title,\n  content,\n  open,\n  icon: Icon,\n}: {\n  title: string;\n  content: string;\n  open?: boolean;\n  icon: DIcon;\n}) {\n  return (\n    <Collapsible\n      className=\"space-y-1 border-t border-border py-3 pe-4 ps-6\"\n      defaultOpen={open}\n    >\n      <CollapsibleTrigger className=\"flex gap-2 text-[15px] font-semibold leading-6 [&[data-state=open]>svg]:rotate-180\">\n        <DIcons.ChevronDown\n          strokeWidth={1}\n          className=\"mt-1  shrink-0 opacity-60 transition-transform duration-200\"\n          aria-hidden=\"true\"\n        />\n        <span className=\"flex items-center gap-3\">\n          <Icon\n            strokeWidth={2}\n            className=\"h-5 w-5 shrink-0 opacity-60\"\n            aria-hidden=\"true\"\n          />\n          <span>{title}</span>\n        </span>\n      </CollapsibleTrigger>\n      <CollapsibleContent className=\"data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down overflow-hidden ps-6 text-sm text-muted-foreground transition-all\">\n        {content}\n      </CollapsibleContent>\n    </Collapsible>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}