{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard-01",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "description": "A simple dashboard",
  "registryDependencies": [],
  "files": [
    {
      "path": "blocks/dashboard/dashboard-01/page.tsx",
      "content": "import Image from \"next/image\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { CalendarDateRangePicker } from \"@/registry/default/blocks/dashboard/dashboard-01/components/date-range-picker\";\nimport { MainNav } from \"@/registry/default/blocks/dashboard/dashboard-01/components/main-nav\";\nimport { Overview } from \"@/registry/default/blocks/dashboard/dashboard-01/components/overview\";\nimport { RecentSales } from \"@/registry/default/blocks/dashboard/dashboard-01/components/recent-sales\";\nimport { Search } from \"@/registry/default/blocks/dashboard/dashboard-01/components/search\";\nimport TeamSwitcher from \"@/registry/default/blocks/dashboard/dashboard-01/components/theme-switcher\";\nimport { UserNav } from \"@/registry/default/blocks/dashboard/dashboard-01/components/user-nav\";\n\nexport default function DashboardPage() {\n  return (\n    <>\n      <div className=\"md:hidden\">\n        <Image\n          src=\"/examples/dashboard-light.png\"\n          width={1280}\n          height={866}\n          alt=\"Dashboard\"\n          className=\"block dark:hidden\"\n        />\n        <Image\n          src=\"/examples/dashboard-dark.png\"\n          width={1280}\n          height={866}\n          alt=\"Dashboard\"\n          className=\"hidden dark:block\"\n        />\n      </div>\n      <div className=\"hidden flex-col md:flex\">\n        <div className=\"border-b\">\n          <div className=\"flex h-16 items-center px-4\">\n            <TeamSwitcher />\n            <MainNav className=\"mx-6\" />\n            <div className=\"ml-auto flex items-center space-x-4\">\n              <Search />\n              <UserNav />\n            </div>\n          </div>\n        </div>\n        <div className=\"flex-1 space-y-4 p-8 pt-6\">\n          <div className=\"flex items-center justify-between space-y-2\">\n            <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n            <div className=\"flex items-center space-x-2\">\n              <CalendarDateRangePicker />\n              <Button>Download</Button>\n            </div>\n          </div>\n          <Tabs defaultValue=\"overview\" className=\"space-y-4\">\n            <TabsList>\n              <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n              <TabsTrigger value=\"analytics\" disabled>\n                Analytics\n              </TabsTrigger>\n              <TabsTrigger value=\"reports\" disabled>\n                Reports\n              </TabsTrigger>\n              <TabsTrigger value=\"notifications\" disabled>\n                Notifications\n              </TabsTrigger>\n            </TabsList>\n            <TabsContent value=\"overview\" className=\"space-y-4\">\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                <Card>\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">\n                      Total Revenue\n                    </CardTitle>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      className=\"h-4 w-4 text-muted-foreground\"\n                    >\n                      <path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n                    </svg>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\">$45,231.89</div>\n                    <p className=\"text-xs text-muted-foreground\">\n                      +20.1% from last month\n                    </p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">\n                      Subscriptions\n                    </CardTitle>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      className=\"h-4 w-4 text-muted-foreground\"\n                    >\n                      <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n                      <circle cx=\"9\" cy=\"7\" r=\"4\" />\n                      <path d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" />\n                    </svg>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\">+2350</div>\n                    <p className=\"text-xs text-muted-foreground\">\n                      +180.1% from last month\n                    </p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">Sales</CardTitle>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      className=\"h-4 w-4 text-muted-foreground\"\n                    >\n                      <rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\" />\n                      <path d=\"M2 10h20\" />\n                    </svg>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\">+12,234</div>\n                    <p className=\"text-xs text-muted-foreground\">\n                      +19% from last month\n                    </p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">\n                      Active Now\n                    </CardTitle>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      className=\"h-4 w-4 text-muted-foreground\"\n                    >\n                      <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\n                    </svg>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\">+573</div>\n                    <p className=\"text-xs text-muted-foreground\">\n                      +201 since last hour\n                    </p>\n                  </CardContent>\n                </Card>\n              </div>\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n                <Card className=\"col-span-4\">\n                  <CardHeader>\n                    <CardTitle>Overview</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"pl-2\">\n                    <Overview />\n                  </CardContent>\n                </Card>\n                <Card className=\"col-span-3\">\n                  <CardHeader>\n                    <CardTitle>Recent Sales</CardTitle>\n                    <CardDescription>\n                      You made 265 sales this month.\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <RecentSales />\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </div>\n    </>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "blocks/dashboard/dashboard-01/components/date-range-picker.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { addDays, format } from \"date-fns\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { DateRange } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\nexport function CalendarDateRangePicker({\n  className,\n}: React.HTMLAttributes<HTMLDivElement>) {\n  const [date, setDate] = React.useState<DateRange | undefined>({\n    from: new Date(2023, 0, 20),\n    to: addDays(new Date(2023, 0, 20), 20),\n  });\n\n  return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant={\"outline\"}\n            className={cn(\n              \"w-[260px] justify-start text-left font-normal\",\n              !date && \"text-muted-foreground\",\n            )}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {date?.from ? (\n              date.to ? (\n                <>\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\n                  {format(date.to, \"LLL dd, y\")}\n                </>\n              ) : (\n                format(date.from, \"LLL dd, y\")\n              )\n            ) : (\n              <span>Pick a date</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\" align=\"end\">\n          <Calendar\n            initialFocus\n            mode=\"range\"\n            defaultMonth={date?.from}\n            selected={date}\n            onSelect={setDate}\n            numberOfMonths={2}\n          />\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard/dashboard-01/components/main-nav.tsx",
      "content": "import Link from \"next/link\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport function MainNav({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLElement>) {\n  return (\n    <nav\n      className={cn(\"flex items-center space-x-4 lg:space-x-6\", className)}\n      {...props}\n    >\n      <Link\n        href=\"/examples/dashboard\"\n        className=\"text-sm font-medium transition-colors hover:text-primary\"\n      >\n        Overview\n      </Link>\n      <Link\n        href=\"/examples/dashboard\"\n        className=\"text-sm font-medium text-muted-foreground transition-colors hover:text-primary\"\n      >\n        Customers\n      </Link>\n      <Link\n        href=\"/examples/dashboard\"\n        className=\"text-sm font-medium text-muted-foreground transition-colors hover:text-primary\"\n      >\n        Products\n      </Link>\n      <Link\n        href=\"/examples/dashboard\"\n        className=\"text-sm font-medium text-muted-foreground transition-colors hover:text-primary\"\n      >\n        Settings\n      </Link>\n    </nav>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard/dashboard-01/components/overview.tsx",
      "content": "\"use client\";\n\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis } from \"recharts\";\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Feb\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Mar\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Apr\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"May\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Jun\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Jul\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Aug\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Sep\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Oct\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Nov\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Dec\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n];\n\nexport function Overview() {\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <BarChart data={data}>\n        <XAxis\n          dataKey=\"name\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        />\n        <YAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) => `$${value}`}\n        />\n        <Bar\n          dataKey=\"total\"\n          fill=\"currentColor\"\n          radius={[4, 4, 0, 0]}\n          className=\"fill-primary\"\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard/dashboard-01/components/recent-sales.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\n\nexport function RecentSales() {\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex items-center\">\n        <Avatar className=\"h-9 w-9\">\n          <AvatarImage src=\"/avatars/01.png\" alt=\"Avatar\" />\n          <AvatarFallback>OM</AvatarFallback>\n        </Avatar>\n        <div className=\"ml-4 space-y-1\">\n          <p className=\"text-sm font-medium leading-none\">Olivia Martin</p>\n          <p className=\"text-sm text-muted-foreground\">\n            olivia.martin@email.com\n          </p>\n        </div>\n        <div className=\"ml-auto font-medium\">+$1,999.00</div>\n      </div>\n      <div className=\"flex items-center\">\n        <Avatar className=\"flex h-9 w-9 items-center justify-center space-y-0 border\">\n          <AvatarImage src=\"/avatars/02.png\" alt=\"Avatar\" />\n          <AvatarFallback>JL</AvatarFallback>\n        </Avatar>\n        <div className=\"ml-4 space-y-1\">\n          <p className=\"text-sm font-medium leading-none\">Jackson Lee</p>\n          <p className=\"text-sm text-muted-foreground\">jackson.lee@email.com</p>\n        </div>\n        <div className=\"ml-auto font-medium\">+$39.00</div>\n      </div>\n      <div className=\"flex items-center\">\n        <Avatar className=\"h-9 w-9\">\n          <AvatarImage src=\"/avatars/03.png\" alt=\"Avatar\" />\n          <AvatarFallback>IN</AvatarFallback>\n        </Avatar>\n        <div className=\"ml-4 space-y-1\">\n          <p className=\"text-sm font-medium leading-none\">Isabella Nguyen</p>\n          <p className=\"text-sm text-muted-foreground\">\n            isabella.nguyen@email.com\n          </p>\n        </div>\n        <div className=\"ml-auto font-medium\">+$299.00</div>\n      </div>\n      <div className=\"flex items-center\">\n        <Avatar className=\"h-9 w-9\">\n          <AvatarImage src=\"/avatars/04.png\" alt=\"Avatar\" />\n          <AvatarFallback>WK</AvatarFallback>\n        </Avatar>\n        <div className=\"ml-4 space-y-1\">\n          <p className=\"text-sm font-medium leading-none\">William Kim</p>\n          <p className=\"text-sm text-muted-foreground\">will@email.com</p>\n        </div>\n        <div className=\"ml-auto font-medium\">+$99.00</div>\n      </div>\n      <div className=\"flex items-center\">\n        <Avatar className=\"h-9 w-9\">\n          <AvatarImage src=\"/avatars/05.png\" alt=\"Avatar\" />\n          <AvatarFallback>SD</AvatarFallback>\n        </Avatar>\n        <div className=\"ml-4 space-y-1\">\n          <p className=\"text-sm font-medium leading-none\">Sofia Davis</p>\n          <p className=\"text-sm text-muted-foreground\">sofia.davis@email.com</p>\n        </div>\n        <div className=\"ml-auto font-medium\">+$39.00</div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard/dashboard-01/components/search.tsx",
      "content": "import { Input } from \"@/components/ui/input\";\n\nexport function Search() {\n  return (\n    <div>\n      <Input\n        type=\"search\"\n        placeholder=\"Search...\"\n        className=\"md:w-[100px] lg:w-[300px]\"\n      />\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard/dashboard-01/components/theme-switcher.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Check, ChevronsUpDown, PlusCircle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from \"@/components/ui/command\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nconst groups = [\n  {\n    label: \"Personal Account\",\n    teams: [\n      {\n        label: \"Alicia Koch\",\n        value: \"personal\",\n      },\n    ],\n  },\n  {\n    label: \"Teams\",\n    teams: [\n      {\n        label: \"Acme Inc.\",\n        value: \"acme-inc\",\n      },\n      {\n        label: \"Monsters Inc.\",\n        value: \"monsters\",\n      },\n    ],\n  },\n];\n\ntype Team = (typeof groups)[number][\"teams\"][number];\n\ntype PopoverTriggerProps = React.ComponentPropsWithoutRef<\n  typeof PopoverTrigger\n>;\n\ninterface TeamSwitcherProps extends PopoverTriggerProps {}\n\nexport default function TeamSwitcher({ className }: TeamSwitcherProps) {\n  const [open, setOpen] = React.useState(false);\n  const [showNewTeamDialog, setShowNewTeamDialog] = React.useState(false);\n  const [selectedTeam, setSelectedTeam] = React.useState<Team>(\n    groups[0]?.teams[0] || { label: \"\", value: \"\" },\n  );\n\n  return (\n    <Dialog open={showNewTeamDialog} onOpenChange={setShowNewTeamDialog}>\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"outline\"\n            role=\"combobox\"\n            aria-expanded={open}\n            aria-label=\"Select a team\"\n            className={cn(\"w-[200px] justify-between\", className)}\n          >\n            <Avatar className=\"mr-2 h-5 w-5\">\n              <AvatarImage\n                src={`https://avatar.vercel.sh/${selectedTeam.value}.png`}\n                alt={selectedTeam.label}\n                className=\"grayscale\"\n              />\n              <AvatarFallback>SC</AvatarFallback>\n            </Avatar>\n            {selectedTeam.label}\n            <ChevronsUpDown className=\"ml-auto opacity-50\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-[200px] p-0\">\n          <Command>\n            <CommandInput placeholder=\"Search team...\" />\n            <CommandList>\n              <CommandEmpty>No team found.</CommandEmpty>\n              {groups.map((group) => (\n                <CommandGroup key={group.label} heading={group.label}>\n                  {group.teams.map((team) => (\n                    <CommandItem\n                      key={team.value}\n                      onSelect={() => {\n                        setSelectedTeam(team);\n                        setOpen(false);\n                      }}\n                      className=\"text-sm\"\n                    >\n                      <Avatar className=\"mr-2 h-5 w-5\">\n                        <AvatarImage\n                          src={`https://avatar.vercel.sh/${team.value}.png`}\n                          alt={team.label}\n                          className=\"grayscale\"\n                        />\n                        <AvatarFallback>SC</AvatarFallback>\n                      </Avatar>\n                      {team.label}\n                      <Check\n                        className={cn(\n                          \"ml-auto\",\n                          selectedTeam.value === team.value\n                            ? \"opacity-100\"\n                            : \"opacity-0\",\n                        )}\n                      />\n                    </CommandItem>\n                  ))}\n                </CommandGroup>\n              ))}\n            </CommandList>\n            <CommandSeparator />\n            <CommandList>\n              <CommandGroup>\n                <DialogTrigger asChild>\n                  <CommandItem\n                    onSelect={() => {\n                      setOpen(false);\n                      setShowNewTeamDialog(true);\n                    }}\n                  >\n                    <PlusCircle className=\"h-5 w-5\" />\n                    Create Team\n                  </CommandItem>\n                </DialogTrigger>\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Create team</DialogTitle>\n          <DialogDescription>\n            Add a new team to manage products and customers.\n          </DialogDescription>\n        </DialogHeader>\n        <div>\n          <div className=\"space-y-4 py-2 pb-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Team name</Label>\n              <Input id=\"name\" placeholder=\"Acme Inc.\" />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"plan\">Subscription plan</Label>\n              <Select>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a plan\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"free\">\n                    <span className=\"font-medium\">Free</span> -{\" \"}\n                    <span className=\"text-muted-foreground\">\n                      Trial for two weeks\n                    </span>\n                  </SelectItem>\n                  <SelectItem value=\"pro\">\n                    <span className=\"font-medium\">Pro</span> -{\" \"}\n                    <span className=\"text-muted-foreground\">\n                      $9/month per user\n                    </span>\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </div>\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={() => setShowNewTeamDialog(false)}>\n            Cancel\n          </Button>\n          <Button type=\"submit\">Continue</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard/dashboard-01/components/user-nav.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nexport function UserNav() {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" className=\"relative h-8 w-8 rounded-full\">\n          <Avatar className=\"h-8 w-8\">\n            <AvatarImage src=\"/avatars/01.png\" alt=\"@shadcn\" />\n            <AvatarFallback>SC</AvatarFallback>\n          </Avatar>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n        <DropdownMenuLabel className=\"font-normal\">\n          <div className=\"flex flex-col space-y-1\">\n            <p className=\"text-sm font-medium leading-none\">shadcn</p>\n            <p className=\"text-xs leading-none text-muted-foreground\">\n              m@example.com\n            </p>\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem>\n            Profile\n            <DropdownMenuShortcut>⇧⌘P</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            Billing\n            <DropdownMenuShortcut>⌘B</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            Settings\n            <DropdownMenuShortcut>⌘S</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>New Team</DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>\n          Log out\n          <DropdownMenuShortcut>⇧⌘Q</DropdownMenuShortcut>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "categories": [
    "dashboard"
  ]
}