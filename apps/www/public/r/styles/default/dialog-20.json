{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog-20",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "files": [
    {
      "path": "examples/components/dialogs/dialog-20.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport DialogImg from \"@/public/images/products/grad-full.jpg\";\nimport { ArrowRight } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\nexport default function DialogDemo() {\n  const [step, setStep] = useState(1);\n\n  const stepContent = [\n    {\n      title: \"Welcome to Designali\",\n      description:\n        \"Explore a curated collection of high-quality design components crafted to elevate your creative workflow.\",\n    },\n    {\n      title: \"Tailor-Made Design Solutions\",\n      description:\n        \"Every component is thoughtfully designed, fully customizable, and aligned with modern design principles.\",\n    },\n    {\n      title: \"Ready to Create?\",\n      description:\n        \"Start building stunning, user-centric designs with our versatile and easy-to-use component library.\",\n    },\n    {\n      title: \"Comprehensive Support\",\n      description:\n        \"Gain access to detailed design guidelines and a thriving creative community to help you every step of the way.\",\n    },\n  ];\n\n  const totalSteps = stepContent.length;\n\n  const handleContinue = () => {\n    if (step < totalSteps) {\n      setStep(step + 1);\n    }\n  };\n\n  return (\n    <Dialog\n      onOpenChange={(open) => {\n        if (open) setStep(1);\n      }}\n    >\n      <DialogTrigger asChild>\n        <Button variant=\"outline\">Onboarding</Button>\n      </DialogTrigger>\n      <DialogContent className=\"gap-0 p-0 [&>button:last-child]:text-white\">\n        <div className=\"p-2\">\n          <Image\n            className=\"w-full rounded-lg\"\n            src={DialogImg}\n            width={382}\n            height={216}\n            alt=\"dialog\"\n          />\n        </div>\n        <div className=\"space-y-6 px-6 pb-6 pt-3\">\n          <DialogHeader>\n            <DialogTitle>{stepContent[step - 1].title}</DialogTitle>\n            <DialogDescription>\n              {stepContent[step - 1].description}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex flex-col justify-between gap-4 sm:flex-row sm:items-center\">\n            <div className=\"flex justify-center space-x-1.5 max-sm:order-1\">\n              {[...Array(totalSteps)].map((_, index) => (\n                <div\n                  key={index}\n                  className={cn(\n                    \"h-1.5 w-1.5 rounded-full bg-primary\",\n                    index + 1 === step ? \"bg-primary\" : \"opacity-20\",\n                  )}\n                />\n              ))}\n            </div>\n            <DialogFooter>\n              <DialogClose asChild>\n                <Button type=\"button\" variant=\"ghost\">\n                  Skip\n                </Button>\n              </DialogClose>\n              {step < totalSteps ? (\n                <Button\n                  className=\"group\"\n                  type=\"button\"\n                  onClick={handleContinue}\n                >\n                  Next\n                  <ArrowRight\n                    className=\"-me-1 ms-2 opacity-60 transition-transform group-hover:translate-x-0.5\"\n                    size={16}\n                    strokeWidth={2}\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <DialogClose asChild>\n                  <Button type=\"button\">Okay</Button>\n                </DialogClose>\n              )}\n            </DialogFooter>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}