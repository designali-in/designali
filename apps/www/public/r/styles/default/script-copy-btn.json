{
  "name": "script-copy-btn",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/script-copy-btn.tsx",
      "content": "\"use client\";\n\nimport { HTMLAttributes, useEffect, useState } from \"react\";\nimport { Check, Copy } from \"lucide-react\";\nimport { motion } from \"motion/react\";\nimport { useTheme } from \"next-themes\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\ninterface ScriptCopyBtnProps extends HTMLAttributes<HTMLDivElement> {\n  codeLanguage: string;\n  lightTheme: string;\n  darkTheme: string;\n  commandMap: Record<string, string>;\n  className?: string;\n}\n\nexport default function ScriptCopyBtn({\n  codeLanguage,\n  lightTheme,\n  darkTheme,\n  commandMap,\n  className,\n}: ScriptCopyBtnProps) {\n  const packageManagers = Object.keys(commandMap);\n  const [packageManager, setPackageManager] = useState(packageManagers[0]);\n  const [copied, setCopied] = useState(false);\n  const [highlightedCode, setHighlightedCode] = useState(\"\");\n  const { theme } = useTheme();\n  const command = commandMap[packageManager];\n\n  useEffect(() => {\n    async function loadHighlightedCode() {\n      try {\n        const { codeToHtml } = await import(\"shiki\");\n        const highlighted = await codeToHtml(command, {\n          lang: codeLanguage,\n          themes: {\n            light: lightTheme,\n            dark: darkTheme,\n          },\n          defaultColor: theme === \"dark\" ? \"dark\" : \"light\",\n        });\n        setHighlightedCode(highlighted);\n      } catch (error) {\n        console.error(\"Error highlighting code:\", error);\n        setHighlightedCode(`<pre>${command}</pre>`);\n      }\n    }\n\n    loadHighlightedCode();\n  }, [command, theme, codeLanguage, lightTheme, darkTheme]);\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(command);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <div className={cn(\"mx-auto flex w-full flex-col\", className)}>\n      <Tabs\n        defaultValue={packageManager}\n        onValueChange={setPackageManager}\n        className=\"w-full\"\n      >\n        <TabsList className=\"mb-2\">\n          {packageManagers.map((pm) => (\n            <TabsTrigger key={pm} value={pm}>\n              {pm}\n            </TabsTrigger>\n          ))}\n        </TabsList>\n\n        {packageManagers.map((pm) => (\n          <TabsContent key={pm} value={pm}>\n            <div className=\"relative flex items-center\">\n              <div className=\"grid grow font-mono text-sm\">\n                <div className=\"grid w-full min-w-0 overflow-auto rounded-xl\">\n                  {highlightedCode ? (\n                    <div\n                      className={`[&>pre]:overflow-x-auto [&>pre]:rounded-md [&>pre]:p-4 [&>pre]:px-4 [&>pre]:font-mono ${\n                        theme === \"dark\" ? \"dark\" : \"light\"\n                      }`}\n                      dangerouslySetInnerHTML={{ __html: highlightedCode }}\n                    />\n                  ) : (\n                    <pre className=\"my-4 max-h-[450px] w-full overflow-auto rounded-lg border bg-slate-50 p-4 dark:bg-slate-950\">\n                      {commandMap[pm]}\n                    </pre>\n                  )}\n                </div>\n              </div>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"relative ml-2 rounded-md\"\n                onClick={copyToClipboard}\n                aria-label={copied ? \"Copied\" : \"Copy to clipboard\"}\n              >\n                <span className=\"sr-only\">{copied ? \"Copied\" : \"Copy\"}</span>\n                <Copy\n                  className={`h-4 w-4 transition-all duration-300 ${\n                    copied ? \"scale-0\" : \"scale-100\"\n                  }`}\n                />\n                <Check\n                  className={`absolute inset-0 m-auto h-4 w-4 transition-all duration-300 ${\n                    copied ? \"scale-100\" : \"scale-0\"\n                  }`}\n                />\n              </Button>\n            </div>\n          </TabsContent>\n        ))}\n      </Tabs>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}